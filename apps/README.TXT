Applications in the apps/ directory
-------------------------------------

Program		Args	Description
----------------------------------------------------------------------------
MkABGR		<none>  Must have chyron.inp in current working directory.
			Creates ABGR.omf file that is in an ABGR pixel
			format.  Can be viewed on SGI with viewABGR.

MkAVR	    <see note1> Produces AVID AVR format omf media files.  Simple
			three frame clips in any of the specified AVRs in
			NTSC, NTSC film, PAL or PAL film formats.  Takes
			input file chyron.inp (specified using the -input
			option).  Default MkAVR is NTSC uncompressed. 

genavrs.sh		(UNIX only) Creates one of each of the types of AVRs,
			in each of the appropriate project (film, NTSC, etc)
			formats.

omf2edl		infile outfile Takes an OMF file and exports an EDL-like 
			text file.

omfACompPlay	infile Takes a composition file, and attempts to play each 
			of the Master Mobs in the file.

omfAPlay	infile	(Macintosh & SGI only) Plays a 2.x OMF audio media 
			file.  Note, because of the edit rate in the files, 
			OMF files generated by the aifc2omf file on the 
			Mac cannot be heard with this player on all systems.
			This application has been extended on the Macintosh
			to support SD2 (Sound Designer 2) format Audio files.

omfARec		infile	(Macintosh only) Records a 2.x OMF audio media file.
			Note that the edit rate placed in the OMF file
			will be the edit rate that the MAC has set in 
			the Sound Control Panel.  Other MACs that are not
			set to the same level may have problems importing
			omfARec generated OMF files.  Older MACs may
			report the edit rate as 22254.545 which is the
			rate that they are recorded at.

omfCheck	infile 	Semantically verify a 2.x OMF file.  The 2.0
			version of "checker".  See Note2 below for additional
			arguments.

omfDump		infile 	Prints the contents and structure of an
			OMF 2.x file in a readable format. The 2.0
			version of "bdump".

omfInfo		infile(s) Prints the contents and structure of an OMF 2.x
			file in a more compact manor than omfDump.  Note:
			PC version is called omfInfo2, Unix version is 
			called omfInfo, and MAC version is omfInfo20.  The
			Mac version has been updated to see SD2 media files.
			See Note2 below for additional arguments.

omfPatch	infile  Takes an OMF file and fixes a number of known problems
			with it.  In particular this is good for older Media
			Composer OMF files, that have a lot of errors when 
			run with omfCheck.  NOTE: This application modifies 
			the original OMF file, so if you want a backup of the
			file, you should copy it before running omfPatch on
			it.

omfVCopy	infile  Copies the video data from infile to a new omf
			file called infile.vid

omfVPlay	infile	(Macintosh & SGI (IRIX 5.x) only) Displays frames 
			of video from a 2.x OMF video media file.  Files 
			generated by the MkAVR application work well with 
			this application.  This application does not 
			display ABGR data properly (from the MkABGR 
			application), but does work with RGBA data properly.

Raw2omf		infile outfile Reads in a raw audio and/or a raw video file
			to create a 2.x OMF file.

viewABGR	infile  (SGI (IRIX 5.x) only) Takes an omf file generated 
			by the app MkABGR, and uses gl to display the frames 
		        contained in the file.

Note1: Arguments for MkAVR are as follows (on all platforms):
 Usage: MkAVR  [-pal | -ntsc] [-film] -input <input file name> [AVRxx]
     AVRxx := ( AVR1 | AVR2 | AVR3 | AVR4 | AVR5
         AVR1e | AVR2e | AVR3e | AVR4e | AVR5e | AVR6e
         AVR25 | AVR26 | AVR27
         AVR2s | AVR3s | AVR4s | AVR6s | AVR8s
         AVR2m | AVR4m | AVR6m
         AVR70 | AVR71 | AVR75 ) 
 Try:
   MkAVR -pal -film -input chryon.inp AVR75
 or
   MkAVR -input chyron.inp AVR27

 The first generates an omf file pfAVR75.omf, the second an omf file
 named nAVR27.omf (n = NTSC, p = PAL, f = film).  chyron.inp is the
 binary input file that exists in the apps directory, and _must be_
 in the current working directory when the application is run.  (Mac
 developers may want to move this file into their CWPPCProjects, or
 CW68kProjects directory in order to make this easier to use.
 
 In the UNIX version of the toolkit, there is a shell script provided to
 generate one of each kind of AVR.  This shell script is genavrs.sh, and 
 creates each AVR one at a time. 

Note2:  omfCheck & omfInfo have the same argument lists:
Usage: <application> [-h] [-v] [-w] [-a] <filename>
-h prints the usage message
-v is verbose mode
-w prints both sematic checks and warnings
-a turns on both verbose mode and the warning messages

    
